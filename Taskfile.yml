version: 3

# Global Properties
silent: true

dotenv:
  - .env

includes:
  ingress:
    taskfile: ./ingress/tasks.yml
    dir: ./ingress
  gitops:
    taskfile: ./gitops/tasks.yml
    dir: ./gitops
  observability:
    taskfile: ./observability/tasks.yml
    dir: ./observability
  security:
    taskfile: ./security/tasks.yml
    dir: ./security
  control-plane:
    taskfile: ./control-plane/tasks.yml
    dir: ./control-plane
  serverless:
    taskfile: ./serverless/tasks.yml
    dir: ./serverless
  gateway:
    taskfile: ./gateway/tasks.yml
    dir: ./gateway
  discovery:
    taskfile: ./discovery/tasks.yml
    dir: ./discovery
  workflows:
    taskfile: ./workflows/tasks.yml
    dir: ./workflows
  apim:
    taskfile: ./apim/tasks.yml
    dir: ./apim
  ci-cd:
    taskfile: ./ci-cd
    dir: ./ci-cd
tasks:
  default:
    desc: List Tasks.
    cmd: task -l

  cluster-kind-deploy:
    desc: Create kubernetes cluster with Kind.
    cmds:
      - kind delete cluster --name kubernetes-stack || true
      - kind create cluster --config kind.yml
      - kubectl cluster-info --context kind-kubernetes-stack || exit 1
      - cp $HOME/.kube/config $HOME/.kube/config-argocd
      - kubectl config set-context --current --namespace=argocd-system --kubeconfig $HOME/.kube/config-argocd
      # Allowing load balancers access to control plane nodes
      # https://github.com/kubernetes-sigs/cloud-provider-kind#allowing-load-balancers-access-to-control-plane-nodes
      # - kubectl label node/kubernetes-stack-control-plane  node.kubernetes.io/exclude-from-external-load-balancers-
      # Running LoadBalancer for KIND
      - docker run --rm -d --network kind -v /var/run/docker.sock:/var/run/docker.sock registry.k8s.io/cloud-provider-kind/cloud-controller-manager:v0.4.0
    preconditions:
      - sh: test -f kind.yml
        msg: Kind's manisfest not provided

  cluster-kind-undeploy:
    desc: Delete Kind kubernetes cluster.
    cmd: kind delete cluster --name kubernetes-stack

  pre-commit-install:
    desc: Install pre-commit
    cmd: pre-commit install

  platform-install:
    desc: Install all the components required for the kubernetes platform.
    deps:
      - task: ingress:nginx-install
      - task: gateway:nginx-install
      - task: security:cert-manager-install
    cmd: kubectl apply -f security/cert-manager/issuers/self.clusterissuer.yml

  platform-install-with-gitops-mode:
    desc: Install all the components required for the kubernetes platform, with GitOps Mode.
    deps:
      - task: gitops:argocd-install
    cmds:
      - kubectl apply -f gitops/argocd/platform/project.yml
      - kubectl apply -f gitops/argocd/platform/apps.yml

  # https://pluto.docs.fairwinds.com/
  platform-check-k8s-breakings-changes/*:
    desc: Check Kubernetes breaking changes.
    vars:
      K8S_VERSION: '{{index .MATCH 0}}'
    cmd: pluto detect-all-in-cluster -t k8s={{.K8S_VERSION}}

  socat-expose-container/*/*/*:
    desc: Expose container port on Host via Socat.
    vars:
      CONTAINER_NAME: '{{index .MATCH 0}}'
      CONTAINER_PORT: '{{index .MATCH 1}}'
      HOST_PORT: '{{index .MATCH 2}}'
    requires:
      vars:
        - CONTAINER_NAME
        - CONTAINER_PORT
        - HOST_PORT
    cmd: >-
      docker run --rm --net kind -it -p {{.HOST_PORT}}:{{.CONTAINER_PORT}} --link {{.CONTAINER_NAME}}:target alpine/socat tcp-listen:{{.CONTAINER_PORT}},fork,reuseaddr tcp-connect:target:{{.CONTAINER_PORT}}
