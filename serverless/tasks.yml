version: 3

includes:
  ingress:
    taskfile: ../ingress/tasks.yml
    dir: ../ingress
  workflows:
    taskfile: ../workflows/tasks.yml
    dir: ../workflows

tasks:
  knative-serving-install:
    desc: Install Knative Serving Operator.
    cmds:
      - kubectl apply -f https://github.com/knative/serving/releases/download/knative-v1.13.1/serving-crds.yaml
      - kubectl apply -f https://github.com/knative/serving/releases/download/knative-v1.13.1/serving-core.yaml

      # Install Network Layer
      - kubectl apply -f knative/serving/kourier.yml

      - kubectl wait pod --timeout=-1s --for=condition=Ready -l '!job-name' -n kourier-system
      - kubectl wait pod --timeout=-1s --for=condition=Ready -l '!job-name' -n knative-serving

      # Configure Knative Serving to use Kourier by default
      - kubectl patch configmap/config-network
        --namespace knative-serving
        --type merge
        --patch '{"data":{"ingress-class":"kourier.ingress.networking.knative.dev"}}'

      # Configure DNS
      - kubectl patch configmap/config-domain
        --namespace knative-serving
        --patch '{"data":{"127.0.0.1.nip.io":""}}'

  knative-serving-uninstall:
    desc: Uninstall Knative Serving Operator.
    cmds:
      - kubectl delete -f knative/serving/kourier.yml
      - kubectl delete -f https://github.com/knative/serving/releases/download/knative-v1.13.1/serving-core.yaml
      - kubectl delete -f https://github.com/knative/serving/releases/download/knative-v1.13.1/serving-crds.yaml


  knative-eventing-install:
    desc: Install Knative Eventing Operator.
    deps:
      - knative-serving-install
    cmds:
      # Install the required custom resource definitions (CRDs)
      - kubectl apply -f https://github.com/knative/eventing/releases/download/knative-v1.14.1/eventing-crds.yaml
      - kubectl wait --for=condition=Established --all crd

      # Install the core components of Eventing
      - kubectl apply -f https://github.com/knative/eventing/releases/download/knative-v1.14.1/eventing-core.yaml
      - kubectl wait pod --timeout=-1s --for=condition=Ready -l '!job-name' -n knative-eventing

      # Install a default Channel (messaging) layer : In Memory
      - kubectl apply -f https://github.com/knative/eventing/releases/download/knative-v1.14.1/in-memory-channel.yaml
      - kubectl wait pod --timeout=-1s --for=condition=Ready -l '!job-name' -n knative-eventing

      # Install a Broker layer : MT Channel Based
      - kubectl apply -f https://github.com/knative/eventing/releases/download/knative-v1.14.1/mt-channel-broker.yaml
      - kubectl wait pod --timeout=-1s --for=condition=Ready -l '!job-name' -n knative-eventing

      # Install Default Broker
      - kubectl apply -f knative/eventing/brokers-triggers/default.broker.yml

  knative-eventing-uninstall:
    desc: Uninstall Knative Eventing Operator.
    cmds:
      - kubectl delete -f serverless/knative/eventing/source-to-service || true
      - kubectl delete -f serverless/knative/eventing/channels-subscribers || true
      - kubectl delete -f serverless/knative/eventing/sink-binding || true
      - kubectl delete -f https://github.com/knative/eventing/releases/download/knative-v1.14.1/mt-channel-broker.yaml
      - kubectl delete -f https://github.com/knative/eventing/releases/download/knative-v1.14.1/in-memory-channel.yaml
      - kubectl delete -f https://github.com/knative/eventing/releases/download/knative-v1.14.1/eventing-core.yaml
      - kubectl delete -f https://github.com/knative/eventing/releases/download/knative-v1.14.1/eventing-crds.yaml

  keda-install:
    desc: Install KEDA
    deps:
      - rabbitmq-install
      - workflows:temporal-install
    cmds:
    - helm repo add kedacore https://kedacore.github.io/charts
    - helm repo update kedacore
    - helm upgrade --install keda kedacore/keda
        --version 2.17.2
        --namespace keda-system
        --create-namespace
    - helm upgrade --install http-add-on kedacore/keda-add-ons-http
        --namespace keda-system
        --version 0.10.0


  rabbitmq-install:
    internal: true
    desc: Install RabbitMQ
    cmds:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update bitnami
    - helm upgrade --install rabbitmq bitnami/rabbitmq
        --version 15.3.2
        --set auth.username=rmquser --set auth.password=rmqpassword

  keda-uninstall:
    desc: Uninstall KEDA
    cmds:
    - kubectl delete so --all
    - helm del keda -n keda-system
    - helm del http-add-on -n keda-system
    - helm del rabbitmq -n keda-system
